name: Tests

on:
  workflow_dispatch: ~
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  tavern:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: ⚡ Setup Golang
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true
    - name: 🔨 Build
      run: go build -v -o ./build/tavern ./tavern
    - name: 🔎 Test
      run: go test -v -race -coverprofile='coverage.out' -covermode=atomic ./tavern/...
    - name: 📶 Upload Coverage Results
      uses: codecov/codecov-action@v3
  imix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v3
    - if: matrix.os == 'windows-latest'
      run: start-process -filepath powershell -ArgumentList '/c','Set-MpPreference -DisableRealtimeMonitoring $true' -verb RunAs
      name: 👾 Disable defender
      shell: powershell
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2022-11-03
        default: true
        profile: minimal
    - name: rust-cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: "./implants/imix -> ../target"
    - name: 🔨 Build
      run: cd implants/imix && cargo build --verbose
    - name: 🔎 Run tests
      run: cd implants/imix && cargo test --verbose -- --test-threads=256

  eldritch:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v3
    - if: matrix.os == 'windows-latest'
      run: start-process -filepath powershell -ArgumentList '/c','Set-MpPreference -DisableRealtimeMonitoring $true' -verb RunAs
      name: 👾 Disable defender
      shell: powershell
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2022-11-03
        default: true
        profile: minimal
    - name: rust-cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: "./implants/ -> ../target"
    - if: matrix.os == 'windows-latest'
      name: Install cargo-tarpaulin for Windows
      run: cargo install --root $home/.cargo/ cargo-tarpaulin
    - if: matrix.os != 'windows-latest'
      name: Install cargo-tarpaulin for Linux & MacOS
      run: cargo install --root ~/.cargo/ cargo-tarpaulin
    - name: 📝 Lint
      run: cd implants/eldritch && cargo check
    - name: 🔎 Run tests
      run: cd implants/eldritch && cargo tarpaulin --target-dir ../target/tarpaulin --skip-clean --verbose --out xml --no-fail-fast
    - name: 📶 Upload Coverage Results
      uses: codecov/codecov-action@v3
