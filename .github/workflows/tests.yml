name: Tests

on:
  workflow_dispatch: ~
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  tavern:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: âš¡ Setup Golang
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true
    - name: ðŸ”¨ Build
      run: go build -v -o ./build/tavern ./tavern
    - name: ðŸ”Ž Test
      run: go test -v -race -coverprofile='coverage.out' -covermode=atomic ./tavern/...
    - name: ðŸ“¶ Upload Coverage Results
      uses: codecov/codecov-action@v3

  imix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: âš¡ Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-imix-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-imix-cargo-
    - if: matrix.os == 'windows-latest'
      run: start-process -filepath powershell -ArgumentList '/c','Set-MpPreference -DisableRealtimeMonitoring $true' -verb RunAs
      name: ðŸ‘¾ Disable defender
      shell: powershell
    - name: ðŸ”¨ Build
      run: cd implants/imix && cargo build --verbose
    - name: ðŸ”Ž Run tests
      run: cd implants/imix && cargo test --verbose -- --test-threads=256

  eldritch:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: âš¡ Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-eldritch-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-eldritch-cargo-
    - if: matrix.os == 'windows-latest'
      run: start-process -filepath powershell -ArgumentList '/c','Set-MpPreference -DisableRealtimeMonitoring $true' -verb RunAs
      name: ðŸ‘¾ Disable defender
      shell: powershell
    - name: ðŸ”¨ Build
      run: cd implants/eldritch && cargo build --verbose
    - name: ðŸ”Ž Run tests
      run: cd implants/eldritch && cargo test --verbose -- --test-threads=256
