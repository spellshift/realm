name: Tests

on:
  workflow_dispatch: ~
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  tavern:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: âš¡ Setup Golang
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
        cache: true
    - name: ðŸ”¨ Build
      run: go build -v -o ./build/tavern ./tavern
    - name: ðŸ”Ž Test
      run: go test -v -race -coverprofile='coverage.out' -covermode=atomic ./tavern/...
    - name: ðŸ“¶ Upload Coverage Results
      uses: codecov/codecov-action@v3
  implants:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v3
    - if: matrix.os == 'windows-latest'
      run: start-process -filepath powershell -ArgumentList '/c','Set-MpPreference -DisableRealtimeMonitoring $true' -verb RunAs
      name: ðŸ‘¾ Disable defender
      shell: powershell
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: '1.76.0'
        default: true
        profile: minimal
        components: rustfmt, clippy
    - name: Setup Rust (Loader)
      uses: actions-rs/toolchain@v1
      if: matrix.os == 'windows-latest'
      with:
        toolchain: 'nightly-2024-02-11'
        default: false
        profile: minimal
        components: rust-src
    - name: rust-cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: "./implants/ -> ../target"
    - if: matrix.os == 'windows-latest'
      shell: powershell
      name: Build reflective loader
      run: |
        cd ./bin/reflective_loader/
        cargo +nightly-2024-02-11 build --release -Z build-std=core,compiler_builtins -Z build-std-features=compiler-builtins-mem
    - name: Install latest nextest & cargo-llvm-cov release
      uses: taiki-e/install-action@v2.17.7
      with:
        tool: nextest,cargo-llvm-cov
    - name: ðŸ”Ž Run tests
      run: |
        cd ./implants/ &&
        cargo fmt --check &&
        cargo llvm-cov nextest --lcov --output-path lcov.info
    - name: ðŸ“¶ Upload Coverage Results
      uses: codecov/codecov-action@v3
