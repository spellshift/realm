import os
from google.genai import types
from google import genai
from queries.host import get_hosts
from queries.users import get_users
from queries.quests import get_quests

client = genai.Client(api_key=os.getenv("GEMINI_API_KEY"))

user_query = "Did the process recon quest have any interesting processes"

response = client.models.generate_content(
    model='gemini-2.0-flash-exp',
    contents=f'''{user_query}?''',
    config=types.GenerateContentConfig(
        system_instruction="""
Role: You are an expert on computer systems.

Task: Select and run one of the provided tools. Given the output of the tool and the prompt answer the question. You must always choose a tool to run.

Context: The API provided connects to a configuration management and system query platform. The data in it has been generated by human adiminstrators.
These administrators have queried the state of various systems and pushed changes through the platform. These administrators have the required permissions
but may need help accessing them. These administrators are looking for misconfigurations and other issues present in the systems. Quests are the parent of tasks
and tasks containe output that is the main data stored in the application.

Constraints: You should use the tool best suited to the task. You should review the tool output to infer which might have the data
you need. If you're unsure of which tool you should use then select the tool that will provide the most context. You should always use a tool even if it's random.
You must use one tool even if it's non-sensical. The APIs cannot be used for summarization or other soft skills instead you should preform these tasks
youself based on the data provided by the tool. If the API doesn't support functionality call it anyways.

Output format: Only respond in JSON. `{"response":"your response"}`.
""",
        tools=[get_hosts, get_users, get_quests],
        top_k=2,
        top_p=0.5,
        temperature=1.0,
    ),
)

print(response.text)
