[package]
name = "eldritch"
version = "0.0.5"
edition = "2021"

[features]
# Check if compiled by imix
imix = []
print_stdout = []

[dependencies]
pb = { workspace = true }
transport = { workspace = true }

aes = { workspace = true }
allocative = { workspace = true }
anyhow = { workspace = true }
async-recursion = { workspace = true }
async-trait = { workspace = true }
base64 = { workspace = true }
chrono = { workspace = true }
derive_more = { workspace = true }
eval = { workspace = true }
flate2 = { workspace = true }
glob = { workspace = true }
hex = { workspace = true }
hex-literal = { workspace = true }
ipnetwork = { workspace = true }
log = { workspace = true }
md5 = { workspace = true }
nix = { workspace = true }
notify = { workspace = true }
object = { workspace = true }
openssl = { workspace = true, features = ["vendored"] }
pretty_env_logger = { workspace = true }
prost-types = { workspace = true }
regex = { workspace = true }
reqwest = { workspace = true, features = ["blocking", "stream"] }
russh = { workspace = true }
russh-sftp = { workspace = true }
russh-keys = { workspace = true }
rust-embed = { workspace = true }
serde_json = { workspace = true }
sha1 = { workspace = true }
sha2 = { workspace = true }
sha256 = { workspace = true }
starlark = { workspace = true }
starlark_derive = { workspace = true }
sysinfo = { workspace = true }
tar = { workspace = true }
tempfile = { workspace = true }
tera = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }
tokio-stream = { workspace = true }
windows-sys = { workspace = true, features = [
    "Win32_Foundation",
    "Win32_System_LibraryLoader",
    "Win32_System_Threading",
    "Win32_System_Memory",
    "Win32_System_Diagnostics_Debug",
    "Win32_Security",
    "Win32_System_SystemInformation",
    "Win32_System_SystemServices",
] }
whoami = { workspace = true }
network-interface = { workspace = true }

# WINDOWS
[target.'cfg(windows)'.dependencies]
winreg = { workspace = true }

# NOT WINDOWS
[target.'cfg(not(windows))'.dependencies]
pnet = { workspace = true }

# NOT FREEBSD
[target.'cfg(not(target_os = "freebsd"))'.dependencies]
netstat2 = { workspace = true }

# DEV
[dev-dependencies]
transport = { workspace = true, features = ["mock"] }
httptest = { workspace = true }
uuid = { workspace = true, features = ["v4"] }

# BUILD
[build-dependencies]
tonic-build = { workspace = true }
anyhow = { workspace = true }
which = { workspace = true }
