// Code generated by ent, DO NOT EDIT.

package ent

// CreateJobInput represents a mutation input for creating jobs.
type CreateJobInput struct {
	Name   string
	TomeID int
}

// Mutate applies the CreateJobInput on the JobMutation builder.
func (i *CreateJobInput) Mutate(m *JobMutation) {
	m.SetName(i.Name)
	m.SetTomeID(i.TomeID)
}

// SetInput applies the change-set in the CreateJobInput on the JobCreate builder.
func (c *JobCreate) SetInput(i CreateJobInput) *JobCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdateUserInput represents a mutation input for updating users.
type UpdateUserInput struct {
	Name        *string
	PhotoURL    *string
	IsActivated *bool
	IsAdmin     *bool
}

// Mutate applies the UpdateUserInput on the UserMutation builder.
func (i *UpdateUserInput) Mutate(m *UserMutation) {
	if v := i.Name; v != nil {
		m.SetName(*v)
	}
	if v := i.PhotoURL; v != nil {
		m.SetPhotoURL(*v)
	}
	if v := i.IsActivated; v != nil {
		m.SetIsActivated(*v)
	}
	if v := i.IsAdmin; v != nil {
		m.SetIsAdmin(*v)
	}
}

// SetInput applies the change-set in the UpdateUserInput on the UserUpdate builder.
func (c *UserUpdate) SetInput(i UpdateUserInput) *UserUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateUserInput on the UserUpdateOne builder.
func (c *UserUpdateOne) SetInput(i UpdateUserInput) *UserUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
