// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_modified_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "size", Type: field.TypeInt, Default: 0},
		{Name: "hash", Type: field.TypeString, Size: 100},
		{Name: "content", Type: field.TypeBytes},
		{Name: "tome_files", Type: field.TypeInt, Nullable: true},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:       "files",
		Columns:    FilesColumns,
		PrimaryKey: []*schema.Column{FilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "files_tomes_files",
				Columns:    []*schema.Column{FilesColumns[7]},
				RefColumns: []*schema.Column{TomesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// JobsColumns holds the columns for the "jobs" table.
	JobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_modified_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "params", Type: field.TypeString, Nullable: true},
		{Name: "job_tome", Type: field.TypeInt},
		{Name: "job_bundle", Type: field.TypeInt, Nullable: true},
	}
	// JobsTable holds the schema information for the "jobs" table.
	JobsTable = &schema.Table{
		Name:       "jobs",
		Columns:    JobsColumns,
		PrimaryKey: []*schema.Column{JobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "jobs_tomes_tome",
				Columns:    []*schema.Column{JobsColumns[5]},
				RefColumns: []*schema.Column{TomesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "jobs_files_bundle",
				Columns:    []*schema.Column{JobsColumns[6]},
				RefColumns: []*schema.Column{FilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "principal", Type: field.TypeString, Nullable: true},
		{Name: "hostname", Type: field.TypeString, Nullable: true},
		{Name: "identifier", Type: field.TypeString, Unique: true},
		{Name: "agent_identifier", Type: field.TypeString, Nullable: true},
		{Name: "host_identifier", Type: field.TypeString, Nullable: true},
		{Name: "last_seen_at", Type: field.TypeTime, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"group", "service"}},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_modified_at", Type: field.TypeTime},
		{Name: "claimed_at", Type: field.TypeTime, Nullable: true},
		{Name: "exec_started_at", Type: field.TypeTime, Nullable: true},
		{Name: "exec_finished_at", Type: field.TypeTime, Nullable: true},
		{Name: "output", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "error", Type: field.TypeString, Nullable: true},
		{Name: "job_tasks", Type: field.TypeInt},
		{Name: "task_session", Type: field.TypeInt},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tasks_jobs_tasks",
				Columns:    []*schema.Column{TasksColumns[8]},
				RefColumns: []*schema.Column{JobsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "tasks_sessions_session",
				Columns:    []*schema.Column{TasksColumns[9]},
				RefColumns: []*schema.Column{SessionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TomesColumns holds the columns for the "tomes" table.
	TomesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_modified_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "parameters", Type: field.TypeString, Nullable: true},
		{Name: "hash", Type: field.TypeString, Size: 100},
		{Name: "eldritch", Type: field.TypeString},
	}
	// TomesTable holds the schema information for the "tomes" table.
	TomesTable = &schema.Table{
		Name:       "tomes",
		Columns:    TomesColumns,
		PrimaryKey: []*schema.Column{TomesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 25},
		{Name: "oauth_id", Type: field.TypeString, Unique: true},
		{Name: "photo_url", Type: field.TypeString},
		{Name: "session_token", Type: field.TypeString, Unique: true, Size: 1000},
		{Name: "is_activated", Type: field.TypeBool, Default: false},
		{Name: "is_admin", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// SessionTagsColumns holds the columns for the "session_tags" table.
	SessionTagsColumns = []*schema.Column{
		{Name: "session_id", Type: field.TypeInt},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// SessionTagsTable holds the schema information for the "session_tags" table.
	SessionTagsTable = &schema.Table{
		Name:       "session_tags",
		Columns:    SessionTagsColumns,
		PrimaryKey: []*schema.Column{SessionTagsColumns[0], SessionTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "session_tags_session_id",
				Columns:    []*schema.Column{SessionTagsColumns[0]},
				RefColumns: []*schema.Column{SessionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "session_tags_tag_id",
				Columns:    []*schema.Column{SessionTagsColumns[1]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		FilesTable,
		JobsTable,
		SessionsTable,
		TagsTable,
		TasksTable,
		TomesTable,
		UsersTable,
		SessionTagsTable,
	}
)

func init() {
	FilesTable.ForeignKeys[0].RefTable = TomesTable
	JobsTable.ForeignKeys[0].RefTable = TomesTable
	JobsTable.ForeignKeys[1].RefTable = FilesTable
	TasksTable.ForeignKeys[0].RefTable = JobsTable
	TasksTable.ForeignKeys[1].RefTable = SessionsTable
	SessionTagsTable.ForeignKeys[0].RefTable = SessionsTable
	SessionTagsTable.ForeignKeys[1].RefTable = TagsTable
}
