// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: eldritch.proto

package epb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Credential_Kind int32

const (
	Credential_KIND_UNSPECIFIED Credential_Kind = 0
	Credential_KIND_PASSWORD    Credential_Kind = 1
	Credential_KIND_SSH_KEY     Credential_Kind = 2
)

// Enum value maps for Credential_Kind.
var (
	Credential_Kind_name = map[int32]string{
		0: "KIND_UNSPECIFIED",
		1: "KIND_PASSWORD",
		2: "KIND_SSH_KEY",
	}
	Credential_Kind_value = map[string]int32{
		"KIND_UNSPECIFIED": 0,
		"KIND_PASSWORD":    1,
		"KIND_SSH_KEY":     2,
	}
)

func (x Credential_Kind) Enum() *Credential_Kind {
	p := new(Credential_Kind)
	*p = x
	return p
}

func (x Credential_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Credential_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_eldritch_proto_enumTypes[0].Descriptor()
}

func (Credential_Kind) Type() protoreflect.EnumType {
	return &file_eldritch_proto_enumTypes[0]
}

func (x Credential_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Credential_Kind.Descriptor instead.
func (Credential_Kind) EnumDescriptor() ([]byte, []int) {
	return file_eldritch_proto_rawDescGZIP(), []int{1, 0}
}

type Process_Status int32

const (
	Process_STATUS_UNSPECIFIED               Process_Status = 0
	Process_STATUS_UNKNOWN                   Process_Status = 1
	Process_STATUS_IDLE                      Process_Status = 2
	Process_STATUS_RUN                       Process_Status = 3
	Process_STATUS_SLEEP                     Process_Status = 4
	Process_STATUS_STOP                      Process_Status = 5
	Process_STATUS_ZOMBIE                    Process_Status = 6
	Process_STATUS_TRACING                   Process_Status = 7
	Process_STATUS_DEAD                      Process_Status = 8
	Process_STATUS_WAKE_KILL                 Process_Status = 9
	Process_STATUS_WAKING                    Process_Status = 10
	Process_STATUS_PARKED                    Process_Status = 11
	Process_STATUS_LOCK_BLOCKED              Process_Status = 12
	Process_STATUS_UNINTERUPTIBLE_DISK_SLEEP Process_Status = 13
)

// Enum value maps for Process_Status.
var (
	Process_Status_name = map[int32]string{
		0:  "STATUS_UNSPECIFIED",
		1:  "STATUS_UNKNOWN",
		2:  "STATUS_IDLE",
		3:  "STATUS_RUN",
		4:  "STATUS_SLEEP",
		5:  "STATUS_STOP",
		6:  "STATUS_ZOMBIE",
		7:  "STATUS_TRACING",
		8:  "STATUS_DEAD",
		9:  "STATUS_WAKE_KILL",
		10: "STATUS_WAKING",
		11: "STATUS_PARKED",
		12: "STATUS_LOCK_BLOCKED",
		13: "STATUS_UNINTERUPTIBLE_DISK_SLEEP",
	}
	Process_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":               0,
		"STATUS_UNKNOWN":                   1,
		"STATUS_IDLE":                      2,
		"STATUS_RUN":                       3,
		"STATUS_SLEEP":                     4,
		"STATUS_STOP":                      5,
		"STATUS_ZOMBIE":                    6,
		"STATUS_TRACING":                   7,
		"STATUS_DEAD":                      8,
		"STATUS_WAKE_KILL":                 9,
		"STATUS_WAKING":                    10,
		"STATUS_PARKED":                    11,
		"STATUS_LOCK_BLOCKED":              12,
		"STATUS_UNINTERUPTIBLE_DISK_SLEEP": 13,
	}
)

func (x Process_Status) Enum() *Process_Status {
	p := new(Process_Status)
	*p = x
	return p
}

func (x Process_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Process_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_eldritch_proto_enumTypes[1].Descriptor()
}

func (Process_Status) Type() protoreflect.EnumType {
	return &file_eldritch_proto_enumTypes[1]
}

func (x Process_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Process_Status.Descriptor instead.
func (Process_Status) EnumDescriptor() ([]byte, []int) {
	return file_eldritch_proto_rawDescGZIP(), []int{2, 0}
}

// Tome for eldritch to execute.
type Tome struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eldritch      string                 `protobuf:"bytes,1,opt,name=eldritch,proto3" json:"eldritch,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FileNames     []string               `protobuf:"bytes,3,rep,name=file_names,json=fileNames,proto3" json:"file_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tome) Reset() {
	*x = Tome{}
	mi := &file_eldritch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tome) ProtoMessage() {}

func (x *Tome) ProtoReflect() protoreflect.Message {
	mi := &file_eldritch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tome.ProtoReflect.Descriptor instead.
func (*Tome) Descriptor() ([]byte, []int) {
	return file_eldritch_proto_rawDescGZIP(), []int{0}
}

func (x *Tome) GetEldritch() string {
	if x != nil {
		return x.Eldritch
	}
	return ""
}

func (x *Tome) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Tome) GetFileNames() []string {
	if x != nil {
		return x.FileNames
	}
	return nil
}

// Credential reported on the host system.
type Credential struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Principal     string                 `protobuf:"bytes,1,opt,name=principal,proto3" json:"principal,omitempty"`
	Secret        string                 `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Kind          Credential_Kind        `protobuf:"varint,3,opt,name=kind,proto3,enum=eldritch.Credential_Kind" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credential) Reset() {
	*x = Credential{}
	mi := &file_eldritch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_eldritch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_eldritch_proto_rawDescGZIP(), []int{1}
}

func (x *Credential) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

func (x *Credential) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Credential) GetKind() Credential_Kind {
	if x != nil {
		return x.Kind
	}
	return Credential_KIND_UNSPECIFIED
}

// Process running on the host system.
type Process struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint64                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Ppid          uint64                 `protobuf:"varint,2,opt,name=ppid,proto3" json:"ppid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Principal     string                 `protobuf:"bytes,4,opt,name=principal,proto3" json:"principal,omitempty"`
	Path          string                 `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Cmd           string                 `protobuf:"bytes,6,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Env           string                 `protobuf:"bytes,7,opt,name=env,proto3" json:"env,omitempty"`
	Cwd           string                 `protobuf:"bytes,8,opt,name=cwd,proto3" json:"cwd,omitempty"`
	Status        Process_Status         `protobuf:"varint,9,opt,name=status,proto3,enum=eldritch.Process_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Process) Reset() {
	*x = Process{}
	mi := &file_eldritch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_eldritch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_eldritch_proto_rawDescGZIP(), []int{2}
}

func (x *Process) GetPid() uint64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Process) GetPpid() uint64 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

func (x *Process) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Process) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

func (x *Process) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Process) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *Process) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *Process) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *Process) GetStatus() Process_Status {
	if x != nil {
		return x.Status
	}
	return Process_STATUS_UNSPECIFIED
}

// ProcessList of running processes on the host system.
type ProcessList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Process             `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessList) Reset() {
	*x = ProcessList{}
	mi := &file_eldritch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessList) ProtoMessage() {}

func (x *ProcessList) ProtoReflect() protoreflect.Message {
	mi := &file_eldritch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessList.ProtoReflect.Descriptor instead.
func (*ProcessList) Descriptor() ([]byte, []int) {
	return file_eldritch_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessList) GetList() []*Process {
	if x != nil {
		return x.List
	}
	return nil
}

// FileMetadata about a file on the host system.
type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Owner         string                 `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Permissions   string                 `protobuf:"bytes,4,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Size          uint64                 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Sha3_256Hash  string                 `protobuf:"bytes,6,opt,name=sha3_256_hash,json=sha3256Hash,proto3" json:"sha3_256_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_eldritch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_eldritch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_eldritch_proto_rawDescGZIP(), []int{4}
}

func (x *FileMetadata) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileMetadata) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *FileMetadata) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *FileMetadata) GetPermissions() string {
	if x != nil {
		return x.Permissions
	}
	return ""
}

func (x *FileMetadata) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileMetadata) GetSha3_256Hash() string {
	if x != nil {
		return x.Sha3_256Hash
	}
	return ""
}

// File on the host system.
type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *FileMetadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_eldritch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_eldritch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_eldritch_proto_rawDescGZIP(), []int{5}
}

func (x *File) GetMetadata() *FileMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *File) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

var File_eldritch_proto protoreflect.FileDescriptor

const file_eldritch_proto_rawDesc = "" +
	"\n" +
	"\x0eeldritch.proto\x12\beldritch\"\xc0\x01\n" +
	"\x04Tome\x12\x1a\n" +
	"\beldritch\x18\x01 \x01(\tR\beldritch\x12>\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2\x1e.eldritch.Tome.ParametersEntryR\n" +
	"parameters\x12\x1d\n" +
	"\n" +
	"file_names\x18\x03 \x03(\tR\tfileNames\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb4\x01\n" +
	"\n" +
	"Credential\x12\x1c\n" +
	"\tprincipal\x18\x01 \x01(\tR\tprincipal\x12\x16\n" +
	"\x06secret\x18\x02 \x01(\tR\x06secret\x12-\n" +
	"\x04kind\x18\x03 \x01(\x0e2\x19.eldritch.Credential.KindR\x04kind\"A\n" +
	"\x04Kind\x12\x14\n" +
	"\x10KIND_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rKIND_PASSWORD\x10\x01\x12\x10\n" +
	"\fKIND_SSH_KEY\x10\x02\"\x8b\x04\n" +
	"\aProcess\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x04R\x03pid\x12\x12\n" +
	"\x04ppid\x18\x02 \x01(\x04R\x04ppid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tprincipal\x18\x04 \x01(\tR\tprincipal\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\x12\x10\n" +
	"\x03cmd\x18\x06 \x01(\tR\x03cmd\x12\x10\n" +
	"\x03env\x18\a \x01(\tR\x03env\x12\x10\n" +
	"\x03cwd\x18\b \x01(\tR\x03cwd\x120\n" +
	"\x06status\x18\t \x01(\x0e2\x18.eldritch.Process.StatusR\x06status\"\xab\x02\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSTATUS_UNKNOWN\x10\x01\x12\x0f\n" +
	"\vSTATUS_IDLE\x10\x02\x12\x0e\n" +
	"\n" +
	"STATUS_RUN\x10\x03\x12\x10\n" +
	"\fSTATUS_SLEEP\x10\x04\x12\x0f\n" +
	"\vSTATUS_STOP\x10\x05\x12\x11\n" +
	"\rSTATUS_ZOMBIE\x10\x06\x12\x12\n" +
	"\x0eSTATUS_TRACING\x10\a\x12\x0f\n" +
	"\vSTATUS_DEAD\x10\b\x12\x14\n" +
	"\x10STATUS_WAKE_KILL\x10\t\x12\x11\n" +
	"\rSTATUS_WAKING\x10\n" +
	"\x12\x11\n" +
	"\rSTATUS_PARKED\x10\v\x12\x17\n" +
	"\x13STATUS_LOCK_BLOCKED\x10\f\x12$\n" +
	" STATUS_UNINTERUPTIBLE_DISK_SLEEP\x10\r\"4\n" +
	"\vProcessList\x12%\n" +
	"\x04list\x18\x01 \x03(\v2\x11.eldritch.ProcessR\x04list\"\xa8\x01\n" +
	"\fFileMetadata\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x14\n" +
	"\x05owner\x18\x02 \x01(\tR\x05owner\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12 \n" +
	"\vpermissions\x18\x04 \x01(\tR\vpermissions\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x04R\x04size\x12\"\n" +
	"\rsha3_256_hash\x18\x06 \x01(\tR\vsha3256Hash\"P\n" +
	"\x04File\x122\n" +
	"\bmetadata\x18\x01 \x01(\v2\x16.eldritch.FileMetadataR\bmetadata\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunkB\"Z realm.pub/tavern/internal/c2/epbb\x06proto3"

var (
	file_eldritch_proto_rawDescOnce sync.Once
	file_eldritch_proto_rawDescData []byte
)

func file_eldritch_proto_rawDescGZIP() []byte {
	file_eldritch_proto_rawDescOnce.Do(func() {
		file_eldritch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eldritch_proto_rawDesc), len(file_eldritch_proto_rawDesc)))
	})
	return file_eldritch_proto_rawDescData
}

var file_eldritch_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_eldritch_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_eldritch_proto_goTypes = []any{
	(Credential_Kind)(0), // 0: eldritch.Credential.Kind
	(Process_Status)(0),  // 1: eldritch.Process.Status
	(*Tome)(nil),         // 2: eldritch.Tome
	(*Credential)(nil),   // 3: eldritch.Credential
	(*Process)(nil),      // 4: eldritch.Process
	(*ProcessList)(nil),  // 5: eldritch.ProcessList
	(*FileMetadata)(nil), // 6: eldritch.FileMetadata
	(*File)(nil),         // 7: eldritch.File
	nil,                  // 8: eldritch.Tome.ParametersEntry
}
var file_eldritch_proto_depIdxs = []int32{
	8, // 0: eldritch.Tome.parameters:type_name -> eldritch.Tome.ParametersEntry
	0, // 1: eldritch.Credential.kind:type_name -> eldritch.Credential.Kind
	1, // 2: eldritch.Process.status:type_name -> eldritch.Process.Status
	4, // 3: eldritch.ProcessList.list:type_name -> eldritch.Process
	6, // 4: eldritch.File.metadata:type_name -> eldritch.FileMetadata
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_eldritch_proto_init() }
func file_eldritch_proto_init() {
	if File_eldritch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eldritch_proto_rawDesc), len(file_eldritch_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eldritch_proto_goTypes,
		DependencyIndexes: file_eldritch_proto_depIdxs,
		EnumInfos:         file_eldritch_proto_enumTypes,
		MessageInfos:      file_eldritch_proto_msgTypes,
	}.Build()
	File_eldritch_proto = out.File
	file_eldritch_proto_goTypes = nil
	file_eldritch_proto_depIdxs = nil
}
