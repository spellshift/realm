{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_coffeescript.a42615f5.chunk.js","mappings":"4FAKA,SAASA,EAAaC,IACnB,SAAUA,GAET,IAAIC,EAAU,YACZC,EAAgB,CACdC,QAAS,aACTC,MAAO,YAEXJ,EAAMK,UAAUN,aAAeC,EAAMK,UAAUC,OAAO,aAAc,CAClEL,QAASA,EACTM,OAAQ,CAEN,CACEJ,QAAS,yBACTK,QAAQ,GAEV,CAEEL,QAAS,yBACTK,QAAQ,EACRC,OAAQ,CACNP,cAAeA,KAIrBQ,QAAS,mSACT,eAAgB,CACdP,QAAS,aACTC,MAAO,cAGXJ,EAAMK,UAAUM,aAAa,eAAgB,UAAW,CACtD,oBAAqB,CACnBR,QAAS,iBACTC,MAAO,WAGT,cAAe,CACbD,QAAS,qBACTC,MAAO,QACPK,OAAQ,CACNR,QAASA,EACTC,cAAeA,MAIrBF,EAAMK,UAAUM,aAAa,eAAgB,SAAU,CACrD,oBAAqB,CACnBR,QAAS,yBACTM,OAAQ,CACNG,UAAW,CACTT,QAAS,QACTC,MAAO,eAETS,KAAMb,EAAMK,UAAUS,aAI1B,mBAAoB,CAClB,CACEX,QAAS,iBACTK,QAAQ,EACRJ,MAAO,UAET,CACED,QAAS,iBACTK,QAAQ,EACRJ,MAAO,SACPK,OAAQ,CACNP,cAAeA,OAKvBF,EAAMK,UAAUM,aAAa,eAAgB,UAAW,CAEtDI,SAAU,kCAELf,EAAMK,UAAUN,aAAa,mBACpCC,EAAMK,UAAUW,OAAShB,EAAMK,UAAUN,YAC1C,CA/EA,CA+EEC,EACL,CApFAiB,EAAOC,QAAUnB,EACjBA,EAAaoB,YAAc,eAC3BpB,EAAaqB,QAAU,CAAC,S","sources":["../node_modules/refractor/lang/coffeescript.js"],"sourcesContent":["'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function(Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/,\n      interpolation = {\n        pattern: /#\\{[^}]+\\}/,\n        alias: 'variable'\n      }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n"],"names":["coffeescript","Prism","comment","interpolation","pattern","alias","languages","extend","string","greedy","inside","keyword","insertBefore","delimiter","rest","javascript","property","coffee","module","exports","displayName","aliases"],"sourceRoot":""}