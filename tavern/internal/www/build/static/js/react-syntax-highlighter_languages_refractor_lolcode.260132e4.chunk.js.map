{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_lolcode.260132e4.chunk.js","mappings":"4FAKA,SAASA,EAAQC,GACfA,EAAMC,UAAUF,QAAU,CACxBG,QAAS,CAAC,6BAA8B,WACxCC,OAAQ,CACNC,QAAS,iBACTC,OAAQ,CACNC,SAAU,aACVC,OAAQ,CAAC,iBAAkB,cAAe,aAE5CC,QAAQ,GAEVC,OAAQ,kCACRF,OAAQ,CACNH,QAAS,iEACTM,YAAY,EACZL,OAAQ,CACNM,QAAS,YAGbC,MAAO,CACLR,QAAS,iDACTM,YAAY,EACZG,MAAO,UAETC,SAAU,CACRV,QAAS,6CACTM,YAAY,GAEdC,QAAS,CACP,CACEP,QAAS,sRACTM,YAAY,GAEd,gBAEFK,QAAS,CACPX,QAAS,+BACTM,YAAY,GAEdJ,SAAU,CACRF,QAAS,qBACTM,YAAY,GAEdM,SAAU,CACRZ,QAAS,uHACTM,YAAY,GAEdO,YAAa,mBAEjB,CApDAC,EAAOC,QAAUpB,EACjBA,EAAQqB,YAAc,UACtBrB,EAAQsB,QAAU,E","sources":["../node_modules/refractor/lang/lolcode.js"],"sourcesContent":["'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\"])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|â€¦|,|!/\n  }\n}\n"],"names":["lolcode","Prism","languages","comment","string","pattern","inside","variable","symbol","greedy","number","lookbehind","keyword","label","alias","function","boolean","operator","punctuation","module","exports","displayName","aliases"],"sourceRoot":""}