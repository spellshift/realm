{"version":3,"file":"static/js/react-syntax-highlighter_languages_refractor_processing.199fbdd2.chunk.js","mappings":"4FAKA,SAASA,EAAWC,GAClBA,EAAMC,UAAUF,WAAaC,EAAMC,UAAUC,OAAO,QAAS,CAC3DC,QAAS,qKACTC,SAAU,8CAEZJ,EAAMC,UAAUI,aAAa,aAAc,SAAU,CAEnDC,SAAU,8BACVC,KAAM,CACJC,QAAS,gEACTC,MAAO,cAGXT,EAAMC,UAAUF,WAAqB,SAAES,QAAU,eACjDR,EAAMC,UAAUF,WAAW,cAAcU,MAAQ,UACnD,CAlBAC,EAAOC,QAAUZ,EACjBA,EAAWa,YAAc,aACzBb,EAAWc,QAAU,E","sources":["../node_modules/refractor/lang/processing.js"],"sourcesContent":["'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }) // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/ // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n"],"names":["processing","Prism","languages","extend","keyword","operator","insertBefore","constant","type","pattern","alias","module","exports","displayName","aliases"],"sourceRoot":""}